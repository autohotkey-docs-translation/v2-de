<!DOCTYPE HTML>
<html lang="de">
<head>
<title>IniWrite - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die IniWrite-Funktion schreibt einen Wert oder eine Sektion in eine INI-Datei im Standardformat." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>IniWrite</h1>

<p>Schreibt einen Wert oder eine Sektion in eine INI-Datei im Standardformat.</p>

<pre class="Syntax"><span class="func">IniWrite</span> Wert, DateiName, Sektion, Schlüssel
<span class="func">IniWrite</span> Paare, DateiName, Sektion</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Wert</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Eine Zeichenkette oder Zahl, die rechts neben das Gleichheitszeichen (=) von <em>Schlüssel</em> geschrieben werden soll.</p>
    <p>Wenn der Text relativ lang ist, kann er via <a href="../Scripts.htm#continuation">Fortsetzungsbereich</a> in mehrere kurze Zeilen aufgeteilt werden, um die Übersichtlichkeit und Wartbarkeit des Skripts zu verbessern.</p>
  </dd>
  
  <dt>Paare</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der komplette Inhalt einer Sektion, die in die INI-Datei geschrieben werden soll, ohne [SektionName]-Überschrift. <em>Schlüssel</em> muss weggelassen werden. <em>Paare</em> darf keine Leerzeilen enthalten. Wenn die Sektion bereits existiert, wird alles bis zum letzten Schlüssel-Wert-Paar überschrieben. <em>Paare</em> kann Zeilen ohne Gleichheitszeichen (=) enthalten, was aber zu inkonsistenten Ergebnissen führen kann. Es können Kommentare in die Datei geschrieben werden, diese werden jedoch entfernt, sobald <a href="IniRead.htm">IniRead</a> verwendet wird.</p>
  </dd>

  <dt>DateiName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name der INI-Datei. Wenn kein absoluter Pfad angegeben ist, wird die Datei im <a href="../Variables.htm#WorkingDir">A_WorkingDir</a>-Verzeichnis vermutet.</p>
  </dd>

  <dt>Sektion</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name einer Sektion in der INI-Datei, erkennbar an den eckigen Klammern (die Klammern müssen in diesem Parameter weggelassen werden).</p>
  </dd>

  <dt>Schlüssel</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Name eines Schlüssels in der INI-Datei.</p>
  </dd>

</dl>
<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Bei Misserfolg wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird immer auf das Ergebnis der Systemfunktion GetLastError() gesetzt, unabhängig davon, ob eine Ausnahme ausgelöst wird oder nicht.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Es können Werte länger als 65535 Zeichen in die Datei geschrieben werden, allerdings kann das zu inkonsistenten Ergebnissen führen, da sie in der Regel von <a href="IniRead.htm">IniRead</a> oder anderen Anwendungen nicht korrekt gelesen werden können.</p>
<p>Eine typische INI-Datei sieht wie folgt aus:</p>
<pre class="no-highlight">[SektionName]
Schlüssel=Wert</pre>
<p>Neue Dateien werden mit einer UTF-16-Byte-Order-Markierung erstellt, um sicherzustellen, dass alle Unicode-Zeichen verwendet werden können. Wenn das nicht erwünscht ist, müssen Sie sicherstellen, dass die Datei existiert, bevor Sie IniWrite aufrufen. Zum Beispiel:</p>
<pre>
<em>; Eine Datei mit ANSI-Kodierung erstellen.</em>
FileAppend "", "KeinUnicode.ini", "CP0"

<em>; Eine UTF-16-Datei ohne Byte-Order-Markierung erstellen.</em>
FileAppend "[SektionName]`n", "Unicode.ini", "UTF-16-RAW"
</pre>
<p><b>Unicode:</b> IniRead und IniWrite verwenden die externen Funktionen <a href="https://learn.microsoft.com/windows/win32/api/winbase/nf-winbase-getprivateprofilestring">GetPrivateProfileString</a> und <a href="https://learn.microsoft.com/windows/win32/api/winbase/nf-winbase-writeprivateprofilestringa">WritePrivateProfileString</a>, um Werte zu lesen oder zu schreiben. Diese Funktionen unterstützen Unicode nur in UTF-16-Dateien; alle anderen Dateien verwenden die Standard-ANSI-Codepage des Systems.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="IniDelete.htm">IniDelete</a>, <a href="IniRead.htm">IniRead</a>, <a href="RegWrite.htm">RegWrite</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Schreibt ein Schlüssel-Wert-Paar in Sektion2 einer INI-Datei im Standardformat.</p>
<pre>IniWrite "Das ist ein neuer Wert", "C:\Temp\MeineDatei.ini", "Sektion2", "Schlüssel"</pre>
</div>

</body>
</html>
