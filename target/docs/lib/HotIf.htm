<!DOCTYPE HTML>
<html lang="de">
<head>
<title>HotIf / HotIfWin... - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die HotIf- und HotIfWin-Funktionen spezifizieren die Kriterien für danach erstellte oder modifizierte Hotkey-Varianten und Hotstring-Varianten." />
<meta name="ahk:equiv-v1" content="lib/Hotkey.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>HotIf / HotIfWin...</h1>

<p>Spezifiziert die Kriterien für danach erstellte oder modifizierte <a href="Hotkey.htm#variant">Hotkey-Varianten</a> und <a href="Hotstring.htm#variant">Hotstring-Varianten</a>.</p>

<h2 id="If">HotIf</h2>
<pre class="Syntax">
<span class="func">HotIf</span> <span class="optional">"Ausdruck"</span>
<span class="func">HotIf</span> <span class="optional">Rückruf</span>
</pre>

<h3 id="HotIf_Parameters">Parameter</h3>
<dl>

  <dt>"Ausdruck"</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn weggelassen, werden leere Kriterien gesetzt (schaltet die Kontextabhängigkeit aus). Andernfalls werden die Kriterien auf einen existierenden <a href="_HotIf.htm">#HotIf</a>-Ausdruck gesetzt. Der Ausdruck wird normalerweise als <a href="../Language.htm#strings">Zeichenkette (in Anführungszeichen)</a> geschrieben, kann aber auch eine Variable oder ein Ausdruck sein, die/der den #HotIf-Ausdruck in Textform enthält bzw. zurückgibt.</p>
    <p class="note"><strong>Hinweis:</strong> Die HotIf-Funktion verwendet die Zeichenkette, die Sie ihr übergeben haben, nicht den ursprünglichen Quellcode. <a href="../misc/EscapeChar.htm">Escapesequenzen</a> werden beim Laden des Skripts aufgelöst, daher werden nur die resultierenden Zeichen berücksichtigt, z.B. stimmen sowohl <code>HotIf 'x = "`t"'</code> als auch <code>HotIf 'x = "' A_Tab '"'</code> mit <code>#HotIf x = "`t"</code> überein.</p>
    <p>Siehe <a href="_HotIf.htm#ExDynamic">#HotIf-Beispiel #5</a>.</p>
  </dd>
  
  <dt>Rückruf</dt>
  <dd>
    <p>Typ: <a href="../misc/Functor.htm">Funktionsobjekt</a></p>
    <p>Wenn weggelassen, werden leere Kriterien gesetzt (schaltet die Kontextabhängigkeit aus). Andernfalls werden die Kriterien auf ein bestimmtes Funktionsobjekt gesetzt. Danach erstellte Hotkeys/Hotstrings werden nur ausgeführt, wenn die Rückruffunktion eine Zahl ungleich 0 zurückgibt. Dies ähnelt <code>HotIf "Ausdruck"</code>, außer dass jeder Hotkey/Hotstring mehrere <a href="Hotkey.htm#variant">Hotkey-Varianten</a> bzw. <a href="Hotstring.htm#variant">Hotstring-Varianten</a> haben kann (eine pro Objekt).</p>
    <p>Die Rückruffunktion akzeptiert einen Parameter und kann wie folgt <a href="../Functions.htm#intro">definiert</a> werden:</p>
    <pre class="NoIndent">MeinRückruf(HotkeyName) { ...</pre>
    <p>Es spielt keine Rolle, welchen Namen Sie dem Parameter geben, allerdings wird ihm als Wert der <a href="../Hotkeys.htm#ThisHotkey">Hotkey-Name</a> oder <a href="../Hotstrings.htm#ThisHotkey">Hotstring-Name</a> zugewiesen.</p>
    <p>Der Parameter der Rückruffunktion kann weggelassen werden, wenn die entsprechende Information nicht benötigt wird, aber dann muss ein Sternchen angegeben werden, z.B. <code>MeinRückruf(*)</code>.</p>
    <p>Einmal an die HotIf-Funktion übergeben, wird das Objekt niemals gelöscht (allerdings wird der beanspruchte Speicher wieder freigegeben, wenn der Prozess beendet wird).</p>
    <p>Siehe <a href="#ExHotIfCallback">Beispiel #2</a> unten oder <a href="Hotkey.htm#ExampleIfFn">Hotkey-Beispiel #6</a>.</p>
  </dd>

</dl>

<h2 id="IfWin">HotIfWin...</h2>
<pre class="Syntax">
<span class="func">HotIfWinActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinExist</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinNotActive</span> <span class="optional">FensterTitel, FensterText</span>
<span class="func">HotIfWinNotExist</span> <span class="optional">FensterTitel, FensterText</span>
</pre>

<h3 id="HotIfWin_Parameters">Parameter</h3>
<dl>

  <dt>FensterTitel, FensterText</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn beide weggelassen werden, werden leere Kriterien gesetzt (schaltet die Kontextabhängigkeit aus). Andernfalls geben Sie für <em>FensterTitel</em> einen <a href="../misc/WinTitle.htm">Fenstertitel oder andere Kriterien</a> zur Identifizierung des Zielfensters und/oder für <em>FensterText</em> eine Teilzeichenkette aus einem Textelement des Zielfensters an (Textelemente können mit dem internen Tool "Window Spy" in Erfahrung gebracht werden). Je nachdem, welche Funktion aufgerufen wird, sind die betroffenen Hotkeys/Hotstrings nur wirksam, während das Zielfenster aktiv ist, existiert, nicht aktiv ist oder nicht existiert.</p>
    <p>Da die Parameter vor dem Funktionsaufruf ausgewertet werden, wird jede Variablenreferenz zu diesem Zeitpunkt dauerhaft wirksam. Mit anderen Worten, spätere Änderungen am Inhalt der Variable werden von existierenden Hotkeys/Hotstrings nicht erkannt.</p>
    <p>Abgesehen davon, dass <em>FensterTitel</em> und <em>FensterText</em> Zeichenketten sein müssen, sind diese Parameter äquivalent zu denen von <a href="WinActive.htm">WinActive</a> oder <a href="WinExist.htm">WinExist</a> und werden gemäß den Standardeinstellungen von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a> und <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> (die im <a href="../Scripts.htm#auto">Auto-Execute-Thread</a> festgelegt wurden) ausgewertet.</p>
    <p>Siehe <a href="#ExHotIfWin">Beispiel #1</a> unten.</p>

  </dd>

</dl>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Es wird eine Ausnahme ausgelöst, wenn der Parameter von HotIf ungültig ist, z.B. wenn er nicht mit einem existierenden Ausdruck übereinstimmt oder keine gültige Rückruffunktion ist.</p>

<h2 id="remarks">Allgemeine Bemerkungen</h2>
<p>Mit den HotIf- und HotIfWin-Funktionen können kontextabhängige <a href="../Hotkeys.htm">Hotkeys</a> und <a href="../Hotstrings.htm">Hotstrings</a> erstellt oder geändert werden, während das Skript läuft (die <a href="_HotIf.htm">#HotIf</a>-Direktive ist hingegen positionsabhängig und wird bereits vor Beginn der Skriptausführung wirksam). Zum Beispiel:</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!e", MeineFunkFürNotepad  <em>; Erstellt einen Hotkey, der nur in Notepad funktioniert.</em>
Hotstring "::bzw", "beziehungsweise"  <em>; Erstellt einen Hotstring, der nur in Notepad funktioniert.</em></pre>
<p>Die Verwendung von HotIf oder einer der HotIfWin-Funktionen macht alle danach erstellten Hotkeys/Hotstrings im aktuellen <a href="../misc/Threads.htm">Thread</a> kontextabhängig und hat Einfluss darauf, welche Hotkey/Hotstring-Varianten die <a href="Hotkey.htm">Hotkey</a>- bzw. <a href="Hotstring.htm">Hotstring</a>-Funktion modifiziert. Nur der jüngste Aufruf einer HotIf- oder HotIfWin-Funktion im aktuellen Thread ist wirksam.</p>
<p>Um die Kontextabhängigkeit auszuschalten (so dass danach erstellte Hotkeys/Hotstrings für alle Fenster wirksam sind), rufen Sie HotIf oder eine der HotIfWin-Funktionen ohne Parameter auf. Zum Beispiel: <code>HotIf</code> oder <code>HotIfWinActive</code>.</p>
<p>Bevor HotIf oder eine der HotIfWin-Funktionen in einem Hotkey/Hotstring-<a href="../misc/Threads.htm">Thread</a> verwendet wird, verwenden die Funktionen <a href="Hotkey.htm">Hotkey</a> und <a href="Hotstring.htm">Hotstring</a> standardmäßig denselben Kontext wie der Hotkey/Hotstring, der den Thread gestartet hat. Mit anderen Worten, <code>Hotkey A_ThisHotkey, "Off"</code> schaltet den aktuellen Hotkey aus, selbst wenn er kontextabhängig ist. Alle anderen Threads erstellen oder modifizieren standardmäßig globale Hotkeys/Hotstrings, es sei denn, dieses Standardverhalten wurde mit HotIf oder mit einer der HotIfWin-Funktionen während der <a href="../Scripts.htm#auto">Startphase des Skripts</a> überschrieben.</p>
<p>Wenn ein Maus- oder Tastatur-Hotkey mit HotIf, mit einer der HotIfWin-Funktionen oder mit der <a href="_HotIf.htm">#HotIf</a>-Direktive deaktiviert wurde, wird er seine ursprüngliche Funktion ausführen, d.h. der Hotkey wird an das aktive Fenster weitergereicht, als gäbe es ihn nicht. Controller-Hotkeys werden allerdings immer weitergereicht, egal ob sie deaktiviert sind oder nicht.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="../Hotkeys.htm">Hotkeys</a>, <a href="../Hotstrings.htm">Hotstrings</a>, <a href="Hotkey.htm">Hotkey-Funktion</a>, <a href="Hotstring.htm">Hotstring-Funktion</a>, <a href="_HotIf.htm">#HotIf</a>, <a href="../misc/Threads.htm">Threads</a></p>

<h2 id="examples">Beispiele</h2>
<div class="ex" id="ExHotIfWin">
<p><a class="ex_number" href="#ExHotIfWin"></a> Ähnlich wie das <a href="_HotIf.htm#ExBasic">#HotIf-Beispiel #1</a> erstellt dieses Beispiel zwei Hotkeys und einen Hotstring, die nur funktionieren, wenn Notepad aktiv ist, und einen Hotkey, der für alle Fenster außer Notepad funktioniert. Der Hauptunterschied ist, dass dieses Beispiel kontextabhängige Hotkeys und Hotstrings während der Skriptausführung erstellt, während das #HotIf-Beispiel diese beim Laden des Skripts erstellt.</p>
<pre>HotIfWinActive "ahk_class Notepad"
Hotkey "^!a", MsgBoxAnzeigen
Hotkey "#c", MsgBoxAnzeigen
Hotstring "::bzw", "Dieser Ersatztext erscheint nur in Notepad."
HotIfWinActive
Hotkey "#c", (*) =&gt; MsgBox("Sie haben WIN+C in einem anderen Fenster als Notepad gedrückt.")

MsgBoxAnzeigen(HotkeyName)
{
    MsgBox "Sie haben " HotkeyName " gedrückt, während Notepad aktiv ist."
}</pre>
</div>
<div class="ex" id="ExHotIfCallback">
<p><a class="ex_number" href="#ExHotIfCallback"></a> Ähnlich wie das obige Beispiel, aber mit einer Rückruffunktion.</p>
<pre>HotIf MeinRückruf
Hotkey "^!a", MsgBoxAnzeigen
Hotkey "#c", MsgBoxAnzeigen
Hotstring "::bzw", "Dieser Ersatztext erscheint nur in Notepad."
HotIf
Hotkey "#c", (*) =&gt; MsgBox("Sie haben WIN+C in einem anderen Fenster als Notepad gedrückt.")

MeinRückruf(*)
{
    if WinActive("ahk_class Notepad")
        return true
    else
        return false
}

MsgBoxAnzeigen(HotkeyName)
{
    MsgBox "Sie haben " HotkeyName " gedrückt, während Notepad aktiv ist."
}</pre>
</div>

</body>
</html>
