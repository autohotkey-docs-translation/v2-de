<!DOCTYPE HTML>
<html lang="de">
<head>
<title>#Warn - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content='Die #Warn-Direktive aktiviert oder deaktiviert bestimmte Warnungen, die auf mögliche Fehler vonseiten des Programmierers hinweisen, wie z.B. Schreibfehler oder fehlende "globale" Deklarationen.' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>#Warn</h1>

<p>Aktiviert oder deaktiviert bestimmte Warnungen, die auf mögliche Fehler vonseiten des Programmierers hinweisen, wie z.B. Schreibfehler oder fehlende "globale" Deklarationen.</p>

<pre class="Syntax"><span class="func">#Warn</span> <span class="optional">WarnungTyp, WarnungModus</span></pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>WarnungTyp</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>

    <p>Wenn weggelassen, wird standardmäßig <em>All</em> verwendet. Andernfalls geben Sie den Typ der Warnung an, die aktiviert oder deaktiviert werden soll.</p>
    <p id="VarUnset"><strong>VarUnset:</strong> Zeigt vor Beginn der Skriptausführung eine Warnung an, wenn die jeweils erste Referenz zu einer Variable nie auf eine der folgenden Arten verwendet wird:</p>
    <ul>
      <li>Als Ziel einer direkten, nicht-dynamischen Zuweisung, z.B. <code>MeineVar := ""</code>.</li>
      <li>Mit dem <a href="../Variables.htm#ref">Referenzoperator</a> verwendet, z.B. <code>&amp;MeineVar</code>.</li>
      <li>Direkt an <a href="IsSet.htm">IsSet</a> übergeben, z.B. <code>IsSet(MeineVar)</code>.</li>
    </ul>
    <p id="LocalSameAsGlobal"><strong>LocalSameAsGlobal:</strong> Zeigt vor Beginn der Skriptausführung eine Warnung an, wenn <em>undeklarierte</em> lokale Variablen den gleichen Namen wie globale Variablen haben. Diese Warnung soll Fehler vermeiden, die auftreten können, wenn vergessen wurde, eine globale Variable innerhalb einer Funktion vor dem Zuweisungsversuch zu deklarieren. Wenn die globale Variable tatsächlich lokal sein soll, kann die Warnung mit einer Deklaration wie <code>local x</code> oder <code>static y</code> unterdrückt werden.</p>
    <p>Diese Warnung ist standardmäßig deaktiviert.</p>
    <pre>#Warn
g := 1
ShowG() {       <em>; Die Warnung wird auch angezeigt, wenn die Funktion nicht aufgerufen wird.</em>
    <em>;global g   ; &lt;-- Dies wird für die Zuweisung an die globale Variable benötigt.</em>
    g := 2
}
ShowG
MsgBox g        <em>; Ohne die Deklaration hat obiges einem lokalen "g" zugewiesen.</em></pre>
    <p id="Unreachable"><strong>Unreachable:</strong> Zeigt vor Beginn der Skriptausführung eine Warnung an, wenn unmittelbar nach einem <code>Return</code>, <code>Break</code>, <code>Continue</code>, <code>Throw</code> oder <code>Goto</code> eine Zeile auf gleicher Verschachtelungsebene folgt, es sei denn, diese Zeile ist das Ziel eines Labels. Zeilen dieser Art werden niemals ausgeführt.</p>
    <p>Wenn der Code nicht erreichbar sein soll – z.B. wenn ein <code>return</code> verwendet wurde, um einen Codeblock vorübergehend zu deaktivieren, oder wenn ein Hotkey oder Hotstring durch Auskommentieren vorübergehend deaktiviert wurde – sollten Sie in Erwägung ziehen, den nicht erreichbaren Code ebenfalls auszukommentieren. Sie können die Warnung auch unterdrücken, indem Sie ein <a href="../misc/Labels.htm">Label</a> über der ersten nicht erreichbaren Zeile definieren.</p>
    <p><strong>All:</strong> Wendet den angegebenen <em>WarnungModus</em> auf alle unterstützten Warnungstypen an.</p>
  </dd>

  <dt>WarnungModus</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>

    <p>Wenn weggelassen, wird standardmäßig <em>MsgBox</em> verwendet. Andernfalls geben Sie einen Wert an, der festlegt, wie Warnungen übermittelt werden sollen.</p>
    <p><strong>MsgBox:</strong> Zeigt ein Mitteilungsfenster an, das die Warnung beschreibt. Beachten Sie, dass das Skript nach dem Schließen des Mitteilungsfensters normal weiterläuft.</p>
    <p><strong>StdOut:</strong> Sendet eine Beschreibung der Warnung zur Standardausgabe (<em>stdout</em>), inklusive Dateiname und Zeilennummer. Auf diese Weise können umfangreiche Texteditoren wie SciTE die Warnungen abfangen, ohne das Skript zu unterbrechen – der Benutzer kann später den Ausgabebereich des Texteditors verwenden, um zu einer fehlerhaften Zeile zu springen.</p>
    <p><strong>OutputDebug:</strong> Sendet eine Beschreibung der Warnung zum Debugger, um sie anzuzeigen. Wenn kein Debugger aktiv ist, hat dieser Modus keinen Effekt. Weitere Details finden Sie unter <a href="OutputDebug.htm">OutputDebug</a>.</p>
    <p><strong>Off:</strong> Deaktiviert alle Warnungen für den angegebenen <em>WarnungTyp</em>.</p>
  </dd>

</dl>
<h2 id="Remarks">Bemerkungen</h2>
	<p>Wenn diese Direktive im Skript nicht angegeben ist, sind alle Warnungen aktiviert und verwenden den MsgBox-Modus, mit Ausnahme der LocalSameAsGlobal-Warnung, die deaktiviert ist.</p>
<p>Die Überprüfungen, die VarUnset-, LocalSameAsGlobal- und Unreachable-Warnungen erzeugen, werden durchgeführt, nachdem alle Direktiven geparst wurden, aber bevor das Skript ausgeführt wird. Folglich ist die Position der Direktive innerhalb des Skripts ohne Bedeutung (und kann wie alle anderen Direktiven nicht bedingt ausgeführt werden).</p>
<p>Die Anordnung der #Warn-Direktiven ist allerdings entscheidend: die letzte Direktive, die eine bestimmte Warnung setzt, bestimmt den Modus dieser Warnung. Zum Beispiel haben die beiden unteren Direktiven den kombinierten Effekt, alle Warnungen außer LocalSameAsGlobal zu aktivieren:</p>
<pre>#Warn All
#Warn LocalSameAsGlobal, Off
</pre>
<h2 id="Related">Siehe auch</h2>
<p><a href="../Functions.htm#Local">Lokale und globale Variablen</a></p>
<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExAllOff">
<p><a class="ex_number" href="#ExAllOff"></a> Deaktiviert alle Warnungen. Nicht empfohlen.</p>
<pre>#Warn All, Off</pre>
</div>

<div class="ex" id="ExOmitted">
<p><a class="ex_number" href="#ExOmitted"></a> Aktiviert alle Warnungstypen und zeigt alle Warnungen in einem Mitteilungsfenster an.</p>
<pre>#Warn</pre>
</div>

<div class="ex" id="ExLSAGOutputDebug">
<p><a class="ex_number" href="#ExLSAGOutputDebug"></a> Sendet eine Warnung an OutputDebug für jede undeklarierte lokale Variable, die den gleichen Namen wie eine globale Variable hat.</p>
<pre>#Warn LocalSameAsGlobal, OutputDebug</pre>
</div>

</body>
</html>
