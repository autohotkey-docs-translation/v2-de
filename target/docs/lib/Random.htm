<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Random - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die Random-Funktion generiert eine pseudozufällige Zahl." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Random</h1>

<p>Generiert eine pseudozufällige Zahl.</p>

<pre class="Syntax">N := <span class="func">Random</span>(<span class="optional">A, B</span>)</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>A, B</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
    <p>Wenn beide weggelassen werden, wird standardmäßig 0.0 und 1.0 verwendet. Wenn nur einer angegeben ist, verwendet der andere standardmäßig 0. Andernfalls geben Sie die zu generierende Mindest- und Höchstzahl an, in beliebiger Reihenfolge.</p>
    <p>Wenn es Integer sind, gehören sowohl die Mindest- als auch die Höchstzahl zu den möglichen Rückgabewerten. Es wird der gesamte 64-Bit-Integer-Bereich unterstützt.</p>
    <p>Wenn es Floating-Point-Zahlen sind, gehört nur die Mindestzahl zu den möglichen Rückgabewerten – die Höchstzahl ist konzeptbedingt ausgeschlossen.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#numbers">Float</a></p>
<p>Diese Funktion gibt eine pseudozufällige Zahl zurück – also eine Zahl, die eine echte Zufallszahl vortäuscht, aber in Wirklichkeit auf Basis einer komplizierten Formel berechnet wurde, um das Bestimmen/Erraten der nächsten Zahl extrem zu erschweren.</p>
<p>Wenn <em>A</em> oder <em>B</em> eine Floating-Point-Zahl ist oder beide weggelassen werden, wird das Ergebnis eine Floating-Point-Zahl sein. Andernfalls ist das Ergebnis ein Integer.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Jede Zahl innerhalb des angegebenen Bereichs hat ungefähr die gleiche Chance, generiert zu werden.</p>
<p>Obwohl die angegebene Höchstzahl bei der Rückgabe einer Floating-Point-Zahl konzeptbedingt ausgeschlossen ist, kann sie trotzdem theoretisch aufgrund von Floating-Point-Rundungsfehlern zurückgegeben werden. Dies wurde nicht bestätigt und ist grundsätzlich nur möglich, wenn die gewählten Grenzwerte größer als 2**53 sind. Beachten Sie auch, dass aufgrund der 2**53 möglichen Werte (z.B. im Bereich von 0.0 bis 1.0) die Chance sehr gering ist, die Mindestzahl zu generieren.</p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Generiert einen zufälligen Integer im Bereich von 1 bis 10 und speichert ihn in <var>N</var>.</p>
<pre>N := Random(1, 10)</pre>
</div>

<div class="ex" id="ExOne">
<p><a class="ex_number" href="#ExOne"></a> Generiert einen zufälligen Integer im Bereich von 0 bis 9 und speichert ihn in <var>N</var>.</p>
<pre>N := Random(9)</pre>
</div>

<div class="ex" id="ExFloat">
<p><a class="ex_number" href="#ExFloat"></a> Generiert eine zufällige Floating-Point-Zahl im Bereich von 0.0 bis 1.0 und speichert sie in <var>Bruch</var>.</p>
<pre>Bruch := Random(0.0, 1.0)
Bruch := Random()  <em>; Dasselbe wie oben.</em></pre>
</div>

</body>
</html>
