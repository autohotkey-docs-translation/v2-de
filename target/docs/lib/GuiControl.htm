<!DOCTYPE HTML>
<html lang="de">
<head>
<title>GuiControl-Objekt - Methoden &amp; Eigenschaften | AutoHotkey v2</title>
<meta name="description" content="Das GuiControl-Objekt bietet eine Schnittstelle, um GUI-Steuerelemente zu ändern und Informationen über sie abzurufen." />
<meta name="ahk:equiv-v1" content="lib/GuiControl.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>GuiControl-Objekt</h1>
<pre class="NoIndent"><span class="dec">class</span> Gui.Control <span class="dec">extends</span> Object</pre>

<p>Bietet eine Schnittstelle, um GUI-Steuerelemente zu ändern und Informationen über sie abzurufen. <a href="Gui.htm#Add">Gui.Add</a>, <a href="Gui.htm#__Item">Gui.__Item</a> und <a href="GuiCtrlFromHwnd.htm">GuiCtrlFromHwnd</a> geben ein Objekt dieses Typs zurück.</p>

<p>"GuiCtrl" wird hier stellvertretend für Instanzen der <code>Gui.Control</code>-Klasse verwendet.</p>
<p><code>Gui.Control</code> dient als Basisklasse für alle GUI-Steuerelemente, aber jeder Steuerelementtyp hat seine eigene Klasse. Einige der folgenden Methoden sind durch den Prototyp der entsprechenden Klasse oder durch die <code>Gui.List</code>-Basisklasse definiert. Eine vollständige Liste finden Sie unter <a href="../ObjList.htm">Interne Klassen</a>.</p>
<p>Zusätzlich zu den von <a href="Object.htm">Object</a> geerbten Methoden und Eigenschaften können GuiControl-Objekte die folgenden vordefinierten Methoden und Eigenschaften haben.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul class="indent">
  <li><a href="#Methods">Methoden</a>:
    <ul>
      <li><a href="#Add">Add</a>: Fügt Elemente in einem Multi-Element-Steuerelement an.</li>
      <li><a href="#Choose">Choose</a>: Wählt ein Element in einem Multi-Element-Steuerelement aus.</li>
      <li><a href="#Delete">Delete</a>: Löscht ein oder alle Elemente aus einem Multi-Element-Steuerelement.</li>
      <li><a href="#Focus">Focus</a>: Fokussiert das Steuerelement.</li>
      <li><a href="#GetPos">GetPos</a>: Ruft die Position und Größe des Steuerelements ab.</li>
      <li><a href="#Move">Move</a>: Verschiebt das Steuerelement und/oder ändert dessen Größe.</li>
      <li><a href="#OnCommand">OnCommand</a>: Registriert eine Funktion oder Methode, die bei WM_COMMAND aufgerufen wird.</li>
      <li><a href="#OnEvent">OnEvent</a>: Registriert eine Funktion oder Methode, die aufgerufen wird, wenn ein bestimmtes Ereignis ausgelöst wird.</li>
      <li><a href="#OnNotify">OnNotify</a>: Registriert eine Funktion oder Methode, die bei WM_NOTIFY aufgerufen wird.</li>
      <li><a href="#Opt">Opt</a>: Setzt Optionen und Styles für das Aussehen und Verhalten des Steuerelements.</li>
      <li><a href="#Redraw">Redraw</a>: Zeichnet den vom Steuerelement beanspruchten Fensterbereich neu.</li>
      <li><a href="#SetFont">SetFont</a>: Bestimmt Schriftart, Schriftgröße, Schriftstil und/oder Schriftfarbe des Steuerelements.</li>
    </ul>
  </li>
  <li><a href="#Properties">Eigenschaften</a>:
    <ul>
      <li><a href="#ClassNN">ClassNN</a>: Ruft den Klassennamen und die Sequenznummer (ClassNN) des Steuerelements ab.</li>
      <li><a href="#Enabled">Enabled</a>: Ermittelt oder setzt den Interaktionsstatus des Steuerelements.</li>
      <li><a href="#Focused">Focused</a>: Ruft den Fokusstatus des Steuerelements ab.</li>
      <li><a href="#Gui">Gui</a>: Ruft das <a href="Gui.htm">Gui-Objekt</a> des übergeordneten Fensters ab.</li>
      <li><a href="#Hwnd">Hwnd</a>: Ruft das Fensterhandle (HWND) des Steuerelements ab.</li>
      <li><a href="#Name">Name</a>: Ermittelt oder setzt den expliziten Namen des Steuerelements.</li>
      <li><a href="#Text">Text</a>: Ermittelt oder setzt den Text bzw. die Beschriftung des Steuerelements.</li>
      <li><a href="#Type">Type</a>: Ruft den Typ des Steuerelements ab.</li>
      <li><a href="#Value">Value</a>: Ermittelt oder setzt den Inhalt eines wertefähigen Steuerelements.</li>
      <li><a href="#Visible">Visible</a>: Ermittelt oder setzt den Sichtbarkeitsstatus des Steuerelements.</li>
    </ul>
  </li>
  <li><a href="#GenRemarks">Allgemeine Bemerkungen</a>:
    <ul>
      <li><a href="#redraw-remarks">Neuzeichnung</a>: Bemerkungen zur Performanz beim Neuzeichnen von Steuerelementen.</li>
    </ul>
  </li>
</ul>

<h2 id="Methods">Methoden</h2>
<div class="methodShort" id="Add">
<h3>Add</h3>
<p>Fügt Elemente in einem Multi-Element-Steuerelement (ListBox, DropDownList, ComboBox oder Tab) an.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Add</span>(Elemente)</pre>
<h4 id="Add_Parameters">Parameter</h4>
<dl>
  <dt>Elemente</dt><dd>
    <p>Typ: <a href="Array.htm">Array</a></p>
    <p>Ein Array von Zeichenketten, die als Listeneinträge/Tabs an das Ende der Liste des Steuerelements angefügt werden sollen, z.B. <code>["Rot", "Grün", "Blau"]</code>.</p>
  </dd>
</dl>
<h4 id="Add_Remarks">Bemerkungen</h4>
<p>Um die Liste stattdessen zu ersetzen (überschreiben), verwenden Sie davor die <a href="#Delete">Delete-Methode</a>. Um einen Listeneintrag/Tab auszuwählen, verwenden Sie die <a href="#Choose">Choose-Methode</a>.</p>
<h4 id="Add_Related">Siehe auch</h4>
<p><a href="ListView.htm#Add">ListView.Add</a>, <a href="TreeView.htm#Add">TreeView.Add</a></p>
</div>

<div class="methodShort" id="Choose">
<h3>Choose</h3>
<p>Wählt ein Element in einem Multi-Element-Steuerelement (ListBox, DropDownList, ComboBox oder Tab) aus.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Choose</span>(Wert)</pre>
<h4 id="Choose_Parameters">Parameter</h4>
<dl>
  <dt>Wert</dt><dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a> oder <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie 1 für den ersten Listeneintrag/Tab, 2 für den zweiten und so weiter an.</p>
    <p>Wenn <em>Wert</em> eine Zeichenkette (oder numerische Zeichenkette) ist, wird ein Listeneintrag/Tab ausgewählt, dessen Name mit <em>Wert</em> beginnt. Die Suche erfolgt nicht Groß-/Kleinschreibung-sensitiv. Wenn z.B. das Steuerelement den Listeneintrag/Tab "UNIX-Text" enthält, genügt die Angabe des Wortes unix (kleingeschrieben), um diesen Listeneintrag auszuwählen. Bei einer <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a> werden alle übereinstimmenden Listeneinträge ausgewählt.</p>
    <p>Wenn <em>Wert</em> 0 oder leer ist, wird die aktuelle Auswahl entfernt.</p></dd>
</dl>
<h4 id="Choose_Remarks">Bemerkungen</h4>
<p>Um <u>alle</u> Listeneinträge in einer <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a> aus- oder abzuwählen, gehen Sie wie folgt vor:</p>
<pre>PostMessage 0x0185, 1, -1, ListBox  <em>; Alle Listeneinträge auswählen. 0x0185 ist LB_SETSEL.</em>
PostMessage 0x0185, 0, -1, ListBox  <em>; Alle Listeneinträge abwählen.</em>
ListBox.Choose(0)  <em>; Alle Listeneinträge abwählen.</em></pre>
<p>Im Gegensatz zu <a href="ControlChooseIndex.htm">ControlChooseIndex</a> kann diese Methode keine <a href="GuiOnEvent.htm#Change">Change</a>- oder <a href="GuiOnEvent.htm#DoubleClick">DoubleClick</a>-Ereignisse auslösen.</p>
</div>

<div class="methodShort" id="Delete">
<h3>Delete</h3>
<p>Löscht ein oder alle Elemente aus einem Multi-Element-Steuerelement (ListBox, DropDownList, ComboBox oder Tab).</p>
<pre class="Syntax">GuiCtrl.<span class="func">Delete</span>(<span class="optional">Wert</span>)</pre>
<h4 id="Delete_Parameters">Parameter</h4>
<dl>
  <dt>Wert</dt><dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn weggelassen, werden alle Listeneinträge/Tabs gelöscht. Andernfalls geben Sie 1 für den ersten Listeneintrag/Tab, 2 für den zweiten und so weiter an.</p>
  </dd>
</dl>
<h4 id="Delete_Remarks">Bemerkungen</h4>
<p>Bei Tab-Steuerelementen sind und bleiben die Untersteuerelemente eines Tabs mit ihrer ursprünglichen Tabnummer verknüpft, d.h. sie sind nie mit dem Anzeigenamen ihres Tabs verknüpft. Das Umbenennen oder Entfernen eines Tabs ändert nicht die Tabnummer, zu der die Untersteuerelemente gehören. Wenn zum Beispiel die drei Tabs <code>["Rot", "Grün", "Blau"]</code> vorhanden sind und der zweite Tab mit <code>MeinTab.Delete(2)</code> entfernt wird, werden die ursprünglich mit Grün verknüpften Untersteuerelemente mit Blau verknüpft. Aufgrund dieses Verhaltens ist es ratsam, nur die am Ende befindlichen Tabs zu entfernen. Tabs, die auf diese Weise entfernt wurden, können später wieder hinzugefügt werden, um ihnen ihre ursprünglichen Steuerelemente zurückzugeben.</p>
<h4 id="Delete_Related">Siehe auch</h4>
<p><a href="ListView.htm#Delete">ListView.Delete</a>, <a href="TreeView.htm#Delete">TreeView.Delete</a></p>
</div>

<div class="methodShort" id="Focus">
<h3>Focus</h3>
<p>Fokussiert das Steuerelement.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Focus</span>()</pre>
<p>Um den gewünschten Effekt zu erzielen, darf das Fenster weder minimiert noch versteckt sein.</p>
<p>Um den Fokusstatus des Steuerelements abzurufen, verwenden Sie die <a href="#Focused">Focused-Eigenschaft</a>.</p>
</div>

<div class="methodShort" id="GetPos">
<h3>GetPos</h3>
<p>Ruft die Position und Größe des Steuerelements ab.</p>
<pre class="Syntax">GuiCtrl.<span class="func">GetPos</span>(<span class="optional">&amp;X, &amp;Y, &amp;Breite, &amp;Höhe</span>)</pre>
<h4 id="GetPos_Parameters">Parameter</h4>
<dl>
  <dt>&amp;X, &amp;Y</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>Wenn weggelassen, wird der zugehörige Wert nicht gespeichert. Andernfalls geben Sie Referenzen an, die auf Ausgabevariablen verweisen, in denen die X- und Y-Koordinate (in Pixel) der oberen linken Ecke des Steuerelements gespeichert werden sollen. Diese Koordinaten sind relativ zur oberen linken Ecke des Clientbereichs des Fensters (das ist der Bereich ohne Titelleiste, Menüleiste und Rahmen).</p>
  </dd>
  <dt>&amp;Breite, &amp;Höhe</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>Wenn weggelassen, wird der zugehörige Wert nicht gespeichert. Andernfalls geben Sie Referenzen an, die auf Ausgabevariablen verweisen, in denen die Breite und Höhe (in Pixel) des Steuerelements gespeichert werden sollen.</p>
  </dd>
</dl>
<h4 id="GetPos_Remarks">Bemerkungen</h4>
<p>Im Gegensatz zu <a href="ControlGetPos.htm">ControlGetPos</a> wendet diese Methode die <a href="Gui.htm#DPIScale">DPI-Skalierung</a> auf die zurückgegebenen Koordinaten an (es sei denn, die <code class="no-highlight">-DPIScale</code>-Option wurde verwendet).</p>
<h4 id="GetPos_Examples">Beispiele</h4>
<pre>MeinEdit.GetPos(&amp;x, &amp;y, &amp;w, &amp;h)
MsgBox "Die X-Koordinate ist " x ". Die Y-Koordinate ist " y ". Die Breite ist " w ". Die Höhe ist " h "."
</pre>
</div>

<div class="methodShort" id="Move">
<h3>Move</h3>
<p>Verschiebt das Steuerelement und/oder ändert dessen Größe.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Move</span>(<span class="optional">X, Y, Breite, Höhe</span>)</pre>
<h4 id="Move_Parameters">Parameter</h4>
<dl>
  <dt>X, Y</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn einer der Parameter weggelassen wird, bleibt die Position des Steuerelements in dieser Dimension unverändert. Andernfalls geben Sie die X- und Y-Koordinate (in Pixel) der oberen linken Ecke der neuen Position des Steuerelements an. Die Koordinaten sind relativ zur oberen linken Ecke des Clientbereichs des Fensters (das ist der Bereich ohne Titelleiste, Menüleiste und Rahmen).</p>
  </dd>
  <dt>Breite, Höhe</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Wenn einer der Parameter weggelassen wird, bleibt die Größe des Steuerelements in dieser Dimension unverändert. Andernfalls geben Sie die neue Breite und Höhe des Steuerelements (in Pixel) an.</p>
  </dd>
</dl>
<h4 id="Move_Remarks">Bemerkungen</h4>
<p>Im Gegensatz zu <a href="ControlMove.htm">ControlMove</a> wendet diese Methode die <a href="Gui.htm#DPIScale">DPI-Skalierung</a> auf die Koordinaten an (es sei denn, die <code class="no-highlight">-DPIScale</code>-Option wurde verwendet).</p>
<h4 id="Move_Examples">Beispiele</h4>
<pre>MeinEdit.Move(10, 20, 200, 100)
MeinEdit.Move(VarX+10, VarY+5, VarW*2, VarH*1.5)</pre>
</div>

<div class="methodShort" id="OnCommand">
<h3>OnCommand</h3>
<p>Registriert eine Funktion oder Methode, die aufgerufen wird, wenn eine Steuerelement­benachrichtigung via <a href="GuiOnCommand.htm#WM_COMMAND">WM_COMMAND</a>-Meldung empfangen wird.</p>
<pre class="Syntax">GuiCtrl.<span class="func">OnCommand</span>(NachrichtCode, Rückruf <span class="optional">, HinzufügenEntfernen</span>)</pre>
<p>Weitere Informationen finden Sie unter <a href="GuiOnCommand.htm">OnCommand</a>.</p>
</div>

<div class="methodShort" id="OnEvent">
<h3>OnEvent</h3>
<p>Registriert eine Funktion oder Methode, die aufgerufen wird, wenn ein bestimmtes <a href="GuiOnEvent.htm#Control_Events">Ereignis</a> ausgelöst wird.</p>
<pre class="Syntax">GuiCtrl.<span class="func">OnEvent</span>(EreignisName, Rückruf <span class="optional">, HinzufügenEntfernen</span>)</pre>
<p>Weitere Informationen finden Sie unter <a href="GuiOnEvent.htm">OnEvent</a>.</p>
</div>

<div class="methodShort" id="OnNotify">
<h3>OnNotify</h3>
<p>Registriert eine Funktion oder Methode, die aufgerufen wird, wenn eine Steuerelement­benachrichtigung via <a href="GuiOnNotify.htm#WM_NOTIFY">WM_NOTIFY</a>-Meldung empfangen wird.</p>
<pre class="Syntax">GuiCtrl.<span class="func">OnNotify</span>(NachrichtCode, Rückruf <span class="optional">, HinzufügenEntfernen</span>)</pre>
<p>Weitere Informationen finden Sie unter <a href="GuiOnNotify.htm">OnNotify</a>.</p>
</div>

<div class="methodShort" id="Opt">
<h3>Opt</h3>
<p>Setzt Optionen und Styles für das Aussehen und Verhalten des Steuerelements.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Opt</span>(Optionen)</pre>
<h4 id="Opt_Parameters">Parameter</h4>
<dl>
  <dt>Optionen</dt><dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Geben Sie beliebig viele <a href="GuiControls.htm">steuerelementspezifische</a> oder <a href="Gui.htm#OtherOptions">allgemeine</a> Optionen und Styles an, die jeweils durch mindestens ein Leer- oder Tabulatorzeichen voneinander getrennt sind.</p>
  </dd>
</dl>
<h4 id="Opt_Remarks">Bemerkungen</h4>
<p>Das folgende Beispiel <a href="Gui.htm#Disabled">verbietet die Interaktion</a> mit dem Steuerelement und macht alle Änderungen am <a href="Gui.htm#Background">Hintergrund</a> rückgängig:</p>
<pre>MeinEdit.Opt("+Disabled -Background")</pre>
<p>Das nächste Beispiel macht die OK-Schaltfläche zur neuen Standardschaltfläche:</p>
<pre>OKButton.Opt("+Default")</pre>
<p>Obwohl auch <a href="../misc/Styles.htm">Styles</a> und erweiterte Styles erkannt werden, können einige von ihnen nicht angewendet oder entfernt werden, nachdem ein Steuerelement erstellt wurde. Eine erfolgreich angewendete Änderung kann immer noch vom Steuerelement selbst ignoriert werden.</p>
</div>

<div class="methodShort" id="Redraw">
<h3>Redraw</h3>
<p>Zeichnet den vom Steuerelement beanspruchten Fensterbereich neu.</p>
<pre class="Syntax">GuiCtrl.<span class="func">Redraw</span>()</pre>
<p>Obwohl diese Methode bei wiederholtem und schnellem Aufruf zu unerwünschtem Flackern führen kann, ist sie in der Lage, fehlerhafte Darstellungen beim Zeichnen bestimmter Steuerelemente wie z.B. <a href="GuiControls.htm#GroupBox">GroupBox</a> zu verhindern.</p>
</div>

<div class="methodShort" id="SetFont">
<h3>SetFont</h3>
<p>Bestimmt Schriftart, Schriftgröße, Schriftstil und/oder Schriftfarbe des Steuerelements.</p>
<pre class="Syntax">GuiCtrl.<span class="func">SetFont</span>(<span class="optional">Optionen, SchriftName</span>)</pre>
<p>Die beiden Parameter können weggelassen werden, um die aktuell via <a href="Gui.htm#SetFont">Gui.SetFont</a> definierte Schrift der GUI zu setzen. Andernfalls werden alle nicht angegebenen Schriftattribute von der vorherigen Schrift des Steuerelements übernommen. Die Schriftfarbe wird nur geändert, wenn sie in den <em>Optionen</em> angegeben ist.</p>
<p>Einzelheiten zu beiden Parametern finden Sie unter <a href="Gui.htm#SetFont">Gui.SetFont</a>.</p>
</div>

<h2 id="Properties">Eigenschaften</h2>
<div class="methodShort" id="ClassNN">
<h3>ClassNN</h3>
<p>Ruft den Klassennamen und die Sequenznummer (ClassNN) des Steuerelements ab.</p>
<pre class="Syntax">ClassNN := GuiCtrl.<span class="func">ClassNN</span></pre>
<p>Die ClassNN-Bezeichnung eines Steuerelements besteht aus dem Namen seiner Fensterklasse gefolgt von seiner Sequenznummer innerhalb des Top-Level-Fensters, das dieses Steuerelement enthält. Zum Beispiel ist "Edit1" das erste Edit-Steuerelement in einem Fenster und "Button12" die zwölfte Schaltfläche.</p>
<p>Siehe auch: <a href="ControlGetClassNN.htm">ControlGetClassNN</a></p>
</div>

<div class="methodShort" id="Enabled">
<h3>Enabled</h3>
<p>Ermittelt oder setzt den Interaktionsstatus des Steuerelements.</p>
<pre class="Syntax">AktuelleEinstellung := GuiCtrl.<span class="func">Enabled</span></pre>
<pre class="Syntax">GuiCtrl.<span class="func">Enabled</span> := NeueEinstellung</pre>
<p><em>AktuelleEinstellung</em> ist <em>NeueEinstellung</em>, falls zugewiesen, andernfalls standardmäßig 1 (true), es sei denn, es wurde mit der <a href="Gui.htm#Disabled">Disabled-Option</a> überschrieben.</p>
<p><em>NeueEinstellung</em> ist ein <a href="../Concepts.htm#boolean">boolescher Wert</a>, der diese Einstellung aktiviert oder deaktiviert. Wenn true, wird die Interaktion mit dem Steuerelement erlaubt. Wenn false, wird die Interaktion mit dem Steuerelement verboten.</p>
<p>Bei Tab-Steuerelementen verbietet oder erlaubt dies zudem die Interaktion mit den Untersteuerelementen. Beachten Sie aber, dass jedes Untersteuerelement, das explizit mit <code>GuiCtrl.Enabled := false</code> deaktiviert wurde, sich diese Einstellung merkt und demzufolge auch nach Reaktivierung des Tab-Steuerelements deaktiviert bleibt.</p>
</div>

<div class="methodShort" id="Focused">
<h3>Focused</h3>
<p>Ruft den Fokusstatus des Steuerelements ab.</p>
<pre class="Syntax">IstFokussiert := GuiCtrl.<span class="func">Focused</span></pre>
<p><em>IstFokussiert</em> ist 1 (true), wenn das Steuerelement den Tastaturfokus hat, andernfalls 0 (false).</p>
<p>Um den gewünschten Effekt zu erzielen, darf das Fenster weder minimiert noch versteckt sein.</p>
<p>Um das Steuerelement zu fokussieren, verwenden Sie die <a href="#Focus">Focus-Methode</a>.</p>
</div>

<div class="methodShort" id="Gui">
<h3>Gui</h3>
<p>Ruft das <a href="Gui.htm">Gui-Objekt</a> des übergeordneten Fensters ab.</p>
<pre class="Syntax">GuiObj := GuiCtrl.<span class="func">Gui</span></pre>
</div>

<div class="methodShort" id="Hwnd">
<h3>Hwnd</h3>
<p>Ruft das Fensterhandle (HWND) des Steuerelements ab.</p>
<pre class="Syntax">Hwnd := GuiCtrl.<span class="func">Hwnd</span></pre>
<p>Die HWND-Nummer (eindeutige ID) eines Steuerelements wird oft in Verbindung mit <a href="PostMessage.htm">PostMessage</a>, <a href="SendMessage.htm">SendMessage</a> und <a href="DllCall.htm">DllCall</a> verwendet. Diese Nummer kann auch direkt in einem <a href="Control.htm#Parameter">Steuerelement-Parameter</a> verwendet werden.</p>
</div>

<div class="methodShort" id="Name">
<h3>Name</h3>
<p>Ermittelt oder setzt den expliziten Namen des Steuerelements.</p>
<pre class="Syntax">AktuellerName := GuiCtrl.<span class="func">Name</span></pre>
<pre class="Syntax">GuiCtrl.<span class="func">Name</span> := NeuerName</pre>
<p><em>AktuellerName</em> ist <em>NeuerName</em>, falls zugewiesen, andernfalls standardmäßig eine leere Zeichenkette, es sei denn, es wurde mit der <a href="Gui.htm#var">V-Option</a> überschrieben.</p>
<p><em>NeuerName</em> ist der neue Name des Steuerelements. Dieser Name kann mit <a href="Gui.htm#__Item">Gui.__Item</a> verwendet werden, um dessen GuiControl-Objekt abzurufen. Der Name wird auch von <a href="Gui.htm#Submit">Gui.Submit</a> verwendet.</p>
</div>

<div class="methodShort" id="Text">
<h3>Text</h3>
<p>Ermittelt oder setzt den Text bzw. die Beschriftung des Steuerelements.</p>
<pre class="Syntax">AktuellerText := GuiCtrl.<span class="func">Text</span></pre>
<pre class="Syntax">GuiCtrl.<span class="func">Text</span> := NeuerText</pre>
<p>Hinweis: Wenn das Steuerelement weder eine sichtbare Beschriftung noch einen (einzelnen) Textwert hat, wird die versteckte Beschriftung des Steuerelements ermittelt (wie bei <a href="ControlGetText.htm">ControlGetText</a>/<a href="ControlSetText.htm">ControlSetText</a>).</p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind abhängig vom <a href="GuiControls.htm">Typ des Steuerelements</a>:</p>

<p><strong>Button / CheckBox / Edit / GroupBox / Link / Radio / Text</strong></p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind die Beschriftung bzw. der Anzeigetext des <a href="GuiControls.htm#Button">Button</a>-, <a href="GuiControls.htm#CheckBox">CheckBox</a>-, <a href="GuiControls.htm#Edit">Edit</a>-, <a href="GuiControls.htm#GroupBox">GroupBox</a>-, <a href="GuiControls.htm#Link">Link</a>-, <a href="GuiControls.htm#Radio">Radio</a>- oder <a href="GuiControls.htm#Text">Text</a>-Steuerelements. Da sich hierbei die Größe des Steuerelements nicht automatisch erweitert, muss so etwas wie <code>GuiCtrl.<a href="#Move">Move</a>(,, 300)</code> verwendet werden, um das Steuerelement breiter zu machen.</p>

<p><strong>DateTime</strong></p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind der formatierte Text, der im <a href="GuiControls.htm#DateTime">DateTime</a>-Steuerelement angezeigt wird. Die Zuweisung einer formatierten Datum/Zeit-Zeichenkette an das Steuerelement wird nicht unterstützt. Weisen Sie dem Steuerelement stattdessen mit der <a href="#Value">Value-Eigenschaft</a> einen Zeitstempel im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format zu, um das angezeigte Datum und/oder die angezeigte Uhrzeit zu ändern.</p>

<p><strong>DropDownList / ComboBox / ListBox / Tab</strong></p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind der Text des aktuell ausgewählten Listeneintrags/Tabs im <a href="GuiControls.htm#DropDownList">DropDownList</a>-, <a href="GuiControls.htm#ComboBox">ComboBox</a>-, <a href="GuiControls.htm#ListBox">ListBox</a>- oder <a href="GuiControls.htm#Tab">Tab</a>-Steuerelement.</p>
<p><em>NeuerText</em> muss der vollständige Text (nicht Groß-/Kleinschreibung-sensitiv) des Listeneintrags/Tabs sein, der ausgewählt werden soll.</p>
<p>Bei einer ComboBox ohne ausgewählten Listeneintrag wird stattdessen der im Eingabefeld enthaltene Text abgerufen. Bei anderen Steuerelementen ist <em>AktuellerText</em> leer. Wenn <em>NeuerText</em> leer ist, wird der aktuelle Listeneintrag/Tab abgewählt.</p>
<p>Bei einer <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a> ist <em>AktuellerText</em> ein Array. <em>NeuerText</em> kann kein Array sein, aber wenn mehrere Listeneinträge übereinstimmen, werden sie alle ausgewählt. Um mehrere Listeneinträge mit unterschiedlichem Text auszuwählen, rufen Sie die <a href="#Choose">Choose-Methode</a> wiederholt auf.</p>
<p>Mit der <a href="#Value">Value-Eigenschaft</a> kann stattdessen ein Listeneintrag/Tab via Positionsnummer ausgewählt werden.</p>

<p><strong>Edit</strong></p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind der Text des <a href="GuiControls.htm#Edit">Edit</a>-Steuerelements. Wie bei anderen Steuerelementen wird der Text unverändert abgerufen oder gesetzt; es findet keine Zeilenumbruchübersetzung statt. Mit der <a href="#Value">Value-Eigenschaft</a> kann der Text eines mehrzeiligen Edit-Steuerelements abgerufen oder gesetzt werden, inklusive Übersetzung zwischen <code class="no-highlight">`r`n</code> und <code class="no-highlight">`n</code>.</p>

<p><strong>StatusBar</strong></p>
<p><em>AktuellerText</em> und <em>NeuerText</em> sind nur der Text des ersten Segments eines <a href="GuiControls.htm#StatusBar">StatusBar</a>-Steuerelements (verwenden Sie <a href="GuiControls.htm#SB_SetText">SB.SetText</a> für mehr Flexibilität).</p>
</div>

<div class="methodShort" id="Type">
<h3>Type</h3>
<p>Ruft den Typ des Steuerelements ab.</p>
<pre class="Syntax">AktuellerTyp := GuiCtrl.<span class="func">Type</span></pre>
<p>Je nach <a href="GuiControls.htm">Typ des Steuerelements</a> ist <var>AktuellerTyp</var> eine der folgenden Zeichenketten: ActiveX, Button, CheckBox, ComboBox, Custom, DateTime, DDL, Edit, GroupBox, Hotkey, Link, ListBox, ListView, MonthCal, Pic, Progress, Radio, Slider, StatusBar, Tab, Tab2, Tab3, Text, TreeView, UpDown.</p>
</div>

<div class="methodShort" id="Value">
<h3>Value</h3>
<p>Ermittelt oder setzt den Inhalt eines wertefähigen Steuerelements.</p>
<pre class="Syntax">AktuellerWert := GuiCtrl.<span class="func">Value</span></pre>
<pre class="Syntax">GuiCtrl.<span class="func">Value</span> := NeuerWert</pre>
<p>Hinweis: Wenn das Steuerelement nicht wertefähig ist, wird <em>AktuellerWert</em> leer sein und die Zuweisung von <em>NeuerWert</em> einen Fehler auslösen. Ungültige Werte lösen eine Ausnahme aus.</p>
<p><em>AktuellerWert</em> und <em>NeuerWert</em> sind abhängig vom <a href="GuiControls.htm">Typ des Steuerelements</a>:</p>

<p><strong>ActiveX</strong></p>
<p><em>AktuellerWert</em> ist das ActiveX-Objekt des <a href="GuiControls.htm#ActiveX">ActiveX</a>-Steuerelements. Wenn das Steuerelement z.B. mit dem Text <em>Shell.Explorer</em> erstellt wurde, wird ein <a href="https://learn.microsoft.com/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa752043(v=vs.85)">WebBrowser</a>-Objekt zurückgegeben. Es wird immer dasselbe <a href="ComValue.htm">Wrapper-Objekt</a> zurückgegeben.</p>
<p><em>NeuerWert</em> ist ungültig und löst eine Ausnahme aus.</p>

<p><strong>CheckBox / Radio</strong></p>
<p><em>AktuellerWert</em> ist 1, wenn das <a href="GuiControls.htm#CheckBox">CheckBox</a>- oder <a href="GuiControls.htm#Radio">Radio</a>-Steuerelement eingeschaltet ist, 0, wenn es ausgeschaltet ist, oder -1, wenn es unbestimmt ist.</p>
<p><em>NeuerWert</em> kann 0 für ausgeschaltet, 1 für eingeschaltet, oder -1 für unbestimmt/grau sein. Wenn das Radio-Steuerelement eingeschaltet wird und Mitglied einer Multi-Radio-Gruppe ist, werden die anderen Radio-Steuerelemente in der Gruppe automatisch ausgeschaltet.</p>
<p>Mit der <a href="#Text">Text-Eigenschaft</a> kann stattdessen der Text bzw. die Beschriftung des Steuerelements abgerufen oder gesetzt werden.</p>

<p><strong>ComboBox / DropDownList / ListBox / Tab</strong></p>
<p><em>AktuellerWert</em> ist die Positionsnummer des aktuell ausgewählten Listeneintrags/Tabs im <a href="GuiControls.htm#ComboBox">ComboBox</a>-, <a href="GuiControls.htm#DropDownList">DropDownList</a>-, <a href="GuiControls.htm#ListBox">ListBox</a>- oder <a href="GuiControls.htm#Tab">Tab</a>-Steuerelement. Wenn nichts ausgewählt ist, wird 0 zurückgegeben. Wenn Text im Eingabefeld einer ComboBox eingetragen ist, wird der erste übereinstimmende Listeneintrag ausgewählt. Wenn kein Listeneintrag übereinstimmt, wird 0 zurückgegeben, selbst wenn Text im Steuerelement vorhanden ist. Bei einer <a href="GuiControls.htm#ListBoxMulti">Mehrfachauswahl-ListBox</a> wird ein Array von Nummern zurückgegeben (das leer ist, wenn keine Listeneinträge ausgewählt sind).</p>
<p><em>NeuerWert</em> ist die Positionsnummer des Listeneintrags/Tabs, der ausgewählt werden soll, oder 0, um die aktuelle Auswahl aufzuheben (dies funktioniert auch mit Tab-Steuerelementen). Um mehrere Listeneinträge auszuwählen, rufen Sie die <a href="#Choose">Choose-Methode</a> wiederholt auf.</p>
<p>Mit der <a href="#Text">Text-Eigenschaft</a> kann stattdessen der Text des ausgewählten Listeneintrags/Tabs abgerufen oder gesetzt werden.</p>

<p><strong>DateTime / MonthCal</strong></p>
<p><em>AktuellerWert</em> ist ein Zeitstempel im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format, der aktuell im <a href="GuiControls.htm#DateTime">DateTime</a>- oder <a href="GuiControls.htm#MonthCal">MonthCal</a>-Steuerelement ausgewählt ist.</p>
<p><em>NeuerWert</em> ist ein Zeitstempel im <a href="FileSetTime.htm#YYYYMMDD">YYYYMMDDHH24MISS</a>-Format. Geben Sie <code>A_Now</code> an, um das aktuelle Datum/Uhrzeit (heute) zu verwenden. Bei DateTime-Steuerelementen kann <em>NeuerWert</em> eine leere Zeichenkette sein, um das Steuerelement ohne vorab ausgewähltes Datum/Uhrzeit anzuzeigen (wenn es mit <a href="GuiControls.htm#ChooseNone">dieser Option</a> erstellt wurde). Bei MonthCal-Steuerelementen kann ein Datumsbereich angegeben werden, wenn das Steuerelement eine <a href="GuiControls.htm#MonthCalMulti">Mehrfachauswahl</a> unterstützt.</p>

<p><strong>Edit</strong></p>
<p><em>AktuellerWert</em> ist der aktuelle Inhalt des <a href="GuiControls.htm#Edit">Edit</a>-Steuerelements. Bei mehrzeiligen Steuerelementen werden alle Zeilenumbrüche im Text als Zeilenvorschübe (`n) ausgegeben, nicht wie üblich als Wagenrücklauf-Zeilenvorschub-Paare (`r`n), die von Nicht-GUI-Funktionen wie <a href="ControlGetText.htm">ControlGetText</a> und <a href="ControlSetText.htm">ControlSetText</a> verwendet werden.</p>
<p><em>NeuerWert</em> ist der neue Inhalt. Bei mehrzeiligen Steuerelementen wird jeder Zeilenvorschub (`n) in <em>Wert</em>, dem kein Wagenrücklauf (`r) vorangestellt ist, automatisch in ein Wagenrücklauf-Zeilenvorschub-Paar (`r`n) übersetzt, um eine korrekte Darstellung zu gewährleisten. In der Regel sollte das keine Probleme bereiten, da bei der Verwendung von <a href="Gui.htm#Submit">Gui.Submit</a> oder beim Abrufen des Wertes diese Übersetzung automatisch rückgängig gemacht wird, indem `r`n mit `n ersetzt wird.</p>
<p>Mit der <a href="#Text">Text-Eigenschaft</a> kann der Text abgerufen oder gesetzt werden, ohne dass eine Übersetzung zwischen `n und `r`n stattfindet.</p>

<p><strong>Hotkey</strong></p>
<p><em>AktuellerWert</em> ist eine Tastenkombination in Form von Modifikatorsymbolen und einem Tastennamen, sofern im <a href="GuiControls.htm#Hotkey">Hotkey</a>-Steuerelement ein Hotkey angegeben ist, andernfalls leer. Beispiele: <code class="no-highlight">^!C</code>, <code class="no-highlight">^Home</code>, <code class="no-highlight">+^NumpadHome</code>.</p>
<p><em>NeuerWert</em> kann eine Tastenkombination in Form von Modifikatorsymbolen und einem Tastennamen sein, oder leer sein, um das Steuerelement leer zu machen. Beispiele: <code class="no-highlight">^!c</code>, <code class="no-highlight">^Numpad1</code>, <code class="no-highlight">+Home</code>. Es werden nur die Modifikatoren ^ (STRG), ! (ALT) und + (UMSCHALT) unterstützt. Weitere verfügbare Tastennamen finden Sie in der <a href="../KeyList.htm">Tastenliste</a>.</p>

<p><strong>Picture</strong></p>
<p><em>AktuellerWert</em> ist der Dateiname des Bildes, wie er ursprünglich bei der Erstellung des <a href="GuiControls.htm#Picture">Picture</a>-Steuerelements angegeben wurde. Dieser Name ändert sich auch dann nicht, wenn später ein anderer Dateiname angegeben wird.</p>
<p><em>NeuerWert</em> ist der Dateiname (oder <a href="../misc/ImageHandles.htm">Handle</a>) des neuen Bildes, das geladen werden soll (siehe <a href="GuiControls.htm#Picture">Picture</a>, welche Dateitypen unterstützt werden). Direkt vor dem Dateinamen können beliebig viele der folgenden Optionen angegeben werden: <code class="no-highlight">*wN</code> (Breite N), <code class="no-highlight">*hN</code> (Höhe N) und <code class="no-highlight">*IconN</code> (Symbolgruppennummer N in einer DLL- oder EXE-Datei). Das folgende Beispiel lädt das Standardsymbol aus der zweiten Symbolgruppe mit einer Breite von 100 Pixel und einer automatischen Höhe via "Seitenverhältnis beibehalten": <code>MeinBild.Value := "*icon2 *w100 *h-1 C:\Meine Anwendung.exe"</code>. Geben Sie <code class="no-highlight">*w0 *h0</code> an, um die aktuelle Breite und Höhe des Bildes zu verwenden. Wenn <code class="no-highlight">*w</code> und <code class="no-highlight">*h</code> weggelassen werden, wird die Größe des Bildes an die Größe des Steuerelements angepasst. Beim Laden eines Symbols aus einer ICO-Datei mit mehreren Symbolen hat die Angabe von Breite und Höhe zudem Einfluss darauf, welches Symbol geladen wird. Hinweis: Verwenden Sie nur ein Leer- oder Tabulatorzeichen zwischen der letzten Option und dem Dateinamen selbst; alle anderen Leer- oder Tabulatorzeichen werden als Teil des Dateinamens interpretiert.</p>

<p><strong>Progress / Slider / UpDown</strong></p>
<p><em>AktuellerWert</em> ist die aktuelle Position des <a href="GuiControls.htm#Progress">Progress</a>-, <a href="GuiControls.htm#Slider">Slider</a>- oder <a href="GuiControls.htm#UpDown">UpDown</a>-Steuerelements.</p>
<p><em>NeuerWert</em> ist die neue Position des Steuerelements, z.B. <code>MeinSlider.Value := 10</code>. Verwenden Sie <code>+=</code>, <code>-=</code>, <code>++</code> oder <code>--</code> anstelle von <code>:=</code>, um mathematische Operationen am aktuellen Wert durchzuführen. Wenn die neue Position außerhalb des gültigen Wertebereichs liegt, wird das Steuerelement auf den nächstmöglichen gültigen Wert gesetzt.</p>

<p><strong>Text</strong></p>
<p><em>AktuellerWert</em> ist der Text bzw. die Beschriftung des <a href="GuiControls.htm#Text">Text</a>-Steuerelements.</p>
<p><em>NeuerWert</em> ist der neue Text des Steuerelements. Da sich hierbei die Größe des Steuerelements nicht automatisch erweitert, muss so etwas wie <code>GuiCtrl.<a href="#Move">Move</a>(,, 300)</code> verwendet werden, um das Steuerelement breiter zu machen.</p>
</div>

<div class="methodShort" id="Visible">
<h3>Visible</h3>
<p>Ermittelt oder setzt den Sichtbarkeitsstatus des Steuerelements.</p>
<pre class="Syntax">AktuelleEinstellung := GuiCtrl.<span class="func">Visible</span></pre>
<pre class="Syntax">GuiCtrl.<span class="func">Visible</span> := NeueEinstellung</pre>
<p><em>AktuelleEinstellung</em> ist <em>NeueEinstellung</em>, falls zugewiesen, andernfalls standardmäßig 1 (true), es sei denn, es wurde mit der <a href="Gui.htm#Hidden">Hidden-Option</a> überschrieben.</p>
<p><em>NeueEinstellung</em> ist ein <a href="../Concepts.htm#boolean">boolescher Wert</a>, der diese Einstellung aktiviert oder deaktiviert. Wenn true, wird das Steuerelement sichtbar gemacht. Wenn false, wird das Steuerelement versteckt.</p>
<p>Bei Tab-Steuerelementen wird diese Eigenschaft zudem alle Untersteuerelemente verstecken oder sichtbar machen. Mit <code>GuiCtrl.Enabled := false</code> kann zusätzlich der Tastaturkurzbefehl eines Steuerelements (unterstrichene Buchstabe) deaktiviert werden.</p>
</div>

<h2 id="GenRemarks">Allgemeine Bemerkungen</h2>

<h3 id="redraw-remarks">Neuzeichnung</h3>
<p>Das Hinzufügen sehr vieler Elemente von z.B. <a href="ListView.htm">ListView</a>, <a href="TreeView.htm">TreeView</a> oder <a href="GuiControls.htm#ListBox">ListBox</a> kann performanter gemacht werden, indem die Neuzeichnung des Steuerelements unterdrückt wird, während die Änderungen vorgenommen werden. Verwenden Sie hierfür <code>GuiCtrl.Opt("-Redraw")</code>, bevor Sie die Elemente hinzufügen, und danach <code>GuiCtrl.Opt("+Redraw")</code>. Änderungen am Steuerelement, die vor dem Deaktivieren der Neuzeichnung noch nicht sichtbar waren, werden in der Regel erst sichtbar, nachdem die Neuzeichnung wieder aktiviert wurde.</p>
<p>Aus Performanzgründen führen Änderungen am Inhalt eines Steuerelements nicht dazu, dass das Steuerelement sofort neu gezeichnet wird, auch wenn die Neuzeichnung aktiv ist. Stattdessen wird ein Teil des Steuerelements "ungültig gemacht" und üblicherweise nach einer kurzen Verzögerung neu gezeichnet, sobald das Programm seine interne Meldungswarteschlange prüft. Das Skript kann mit <code>Sleep -1</code> erzwingen, dass dies sofort stattfindet.</p>

</body>
</html>
