<!DOCTYPE HTML>
<html lang="de">
<head>
<title>RegRead - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die RegRead-Funktion liest einen Wert aus der Registry." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>RegRead</h1>

<p>Liest einen Wert aus der Registry.</p>

<pre class="Syntax">Wert := <span class="func">RegRead</span>(<span class="optional">SchlüsselName, WertName, Standardwert</span>)
</pre>
<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>SchlüsselName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Der vollständige Name des Registry-Schlüssels, z.B. <code>"HKLM\Software\BeliebigeApp"</code>.</p>
    <p>Der Name muss entweder mit HKEY_LOCAL_MACHINE (oder HKLM), HKEY_USERS (oder HKU), HKEY_CURRENT_USER (oder HKCU), HKEY_CLASSES_ROOT (oder HKCR) oder HKEY_CURRENT_CONFIG (oder HKCC) beginnen.</p>
    <p>Um auf eine <a href="LoopReg.htm#remote">Remote-Registry</a> zuzugreifen, stellen Sie den Computernamen und einen umgekehrten Schrägstrich voran, z.B. <code>"\\workstation01\HKLM"</code>.</p>
    <p><em>SchlüsselName</em> kann nur weggelassen werden, wenn eine <a href="LoopReg.htm">Registry-Schleife</a> läuft – in diesem Fall wird standardmäßig der Schlüssel des aktuellen Schleifenelements verwendet. Wenn das Element ein Unterschlüssel ist, wird standardmäßig der vollständige Name dieses Unterschlüssels verwendet. Wenn das Element ein Wert ist, verwendet <em>WertName</em> standardmäßig den Namen dieses Wertes, kann aber überschrieben werden.</p>
  </dd>

  <dt>WertName</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a></p>
    <p>Wenn leer oder weggelassen, wird der Standardwert des Schlüssels abgerufen (außer wie oben erwähnt) – das ist der Wert, den RegEdit als "(Standard)" anzeigt. Andernfalls geben Sie den Namen des abzurufenden Wertes an. Wenn es keinen Standardwert gibt (also wenn RegEdit "Wert nicht festgelegt" anzeigt), wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst.</p>
  </dd>
  
  <dt>Standardwert</dt>
  <dd>
    <p>Typ: Any</p>
    <p>Wenn weggelassen, wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst, anstatt einen Standardwert zurückzugeben. Andernfalls geben Sie den Wert an, der zurückgegeben werden soll, wenn der angegebene Schlüssel oder Wert nicht existiert.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#strings">Zeichenkette</a> oder <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt einen Wert des angegebenen Registry-Schlüssels zurück.</p>

<h2 id="Error_Handling">Fehlerbehandlung</h2>
<p>Bei Misserfolg wird ein <a href="Error.htm#OSError">OSError</a> ausgelöst. Misserfolg ist z.B. ein nicht-existierender Schlüssel oder Wert bei weggelassenem <em>Standardwert</em> oder ein Berechtigungsfehler.</p>
<p><a href="../Variables.htm#LastError">A_LastError</a> wird auf das Ergebnis der Systemfunktion GetLastError() gesetzt.</p>

<h2 id="Remarks">Bemerkungen</h2>
<p>Zurzeit werden nur die folgenden Werttypen unterstützt: REG_SZ, REG_EXPAND_SZ, REG_MULTI_SZ, REG_DWORD und REG_BINARY.</p>
<p>REG_DWORD-Werte sind in der Registry immer positive Dezimalzahlen. Wenn ein REG_DWORD-Wert als negative Zahl gedacht war, wandeln Sie ihn mit <code>AusgabeVar := AusgabeVar &lt;&lt; 32 &gt;&gt; 32</code> o.ä. in einen vorzeichenfähigen 32-Bit-Integer um.</p>
<p>Wenn ein REG_BINARY-Schlüssel gelesen wird, ist das Ergebnis eine Zeichenkette aus hexadezimalen Zeichen. Zum Beispiel wird der REG_BINARY-Wert 01,a9,ff,77 als 01A9FF77 gelesen.</p>
<p>Wenn ein REG_MULTI_SZ-Schlüssel gelesen wird, endet jede Komponente mit einem Zeilenvorschubzeichen (`n). Wenn keine Komponenten vorhanden sind, wird eine leere Zeichenkette zurückgegeben. Um die einzelnen Komponenten aus dem Rückgabewert zu extrahieren, verwenden Sie eine <a href="LoopParse.htm">parsende Schleife</a>.</p>
<p>Mit der <a href="LoopReg.htm">Registry-Schleife</a> können mehrere Registry-Schlüssel und -Werte abgerufen und bearbeitet werden.</p>
<p>In den Bemerkungen zur <a href="LoopReg.htm#remote">Registry-Schleife</a> finden Sie Informationen darüber, wie auf die Registry eines Remote-Computers zugegriffen werden kann.</p>
<p>Um Einträge in den 64-Bit-Bereichen der Registry mit einem 32-Bit-Skript (oder umgekehrt) zu lesen und zu schreiben, verwenden Sie <a href="SetRegView.htm">SetRegView</a>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="RegCreateKey.htm">RegCreateKey</a>, <a href="RegDelete.htm">RegDelete</a>, <a href="RegDeleteKey.htm">RegDeleteKey</a>, <a href="RegWrite.htm">RegWrite</a>, <a href="LoopReg.htm">Registry-Schleife</a>, <a href="SetRegView.htm">SetRegView</a>, <a href="IniRead.htm">IniRead</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Liest einen Wert aus der Registry und speichert ihn in <var>Testwert</var>.</p>
<pre>Testwert := RegRead("HKEY_LOCAL_MACHINE\Software\BeliebigeApp", "Testwert")</pre>
</div>

<div class="ex" id="ExProgramFiles">
<p><a class="ex_number" href="#ExProgramFiles"></a> Ruft den Pfad des Ordners "Programme" ab und meldet ihn. Eine alternative Methode finden Sie unter <a href="EnvGet.htm#ExProgramFiles">EnvGet-Beispiel #2</a>.</p>
<pre><em>; Die folgende Zeile stellt sicher, dass der Pfad des 64-Bit-Programmordners
; zurückgegeben wird, wenn das System 64-Bit ist und das Skript nicht.</em>
<a href="SetRegView.htm">SetRegView</a> 64

ProgramFilesDir := RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion", "ProgramFilesDir")
MsgBox "Programmdateien sind in: " ProgramFilesDir</pre>
</div>


<div class="ex" id="ExType">
<p><a class="ex_number" href="#ExType"></a> Ruft den Typ eines Registry-Wertes (z.B. REG_SZ oder REG_DWORD) ab.</p>
<pre>MsgBox RegSchlüsselTyp("HKCU", "Environment", "TEMP")
return

RegSchlüsselTyp(RootSchlüssel, UnterSchlüssel, WertName)  <em>; Diese Funktion gibt den Typ eines bestimmten Wertes zurück.</em>
{
    Loop Reg, RootSchlüssel "\" UnterSchlüssel
        if (A_LoopRegName = WertName)
            return A_LoopRegType
    return "Fehler"
}</pre>
</div>

</body>
</html>
