<!DOCTYPE HTML>
<html lang="de">
<head>
<title>SendLevel - Syntax &amp; Verwendung | AutoHotkey v2</title>
<meta name="description" content="Die SendLevel-Funktion bestimmt, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden." />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>SendLevel</h1>
<p>Bestimmt, welche künstlichen Tastatur- oder Mausereignisse von Hotkeys und Hotstrings ignoriert werden.</p>
<pre class="Syntax"><span class="func">SendLevel</span> Level</pre>

<h2 id="Parameters">Parameter</h2>
<dl>

  <dt>Level</dt>
  <dd>
    <p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>Ein Integer zwischen 0 und 100.</p>
  </dd>

</dl>

<h2 id="Return_Value">Rückgabewert</h2>
<p>Typ: <a href="../Concepts.htm#numbers">Integer</a></p>
<p>Diese Funktion gibt die vorherige Einstellung zurück; ein Integer zwischen 0 und 100.</p>

<h2 id="General_Remarks">Allgemeine Bemerkungen</h2>
<p>Wenn SendLevel nicht verwendet wird, ist der Level standardmäßig 0.</p>
<p><a href="_UseHook.htm">Hook</a>-<a href="../Hotkeys.htm">Hotkeys</a> und -<a href="../Hotstrings.htm">Hotstrings</a> ignorieren standardmäßig Tastatur- und Mausereignisse, die von einem anderen AutoHotkey-Skript erzeugt werden. In einigen Fällen kann es sinnvoll sein, dieses Verhalten zu überschreiben, z.B. um eine neubelegte Taste andere Hotkeys auslösen zu lassen. SendLevel und <a href="_InputLevel.htm">#InputLevel</a> stellen dafür die Mittel zur Verfügung.</p>
<p>SendLevel setzt den Level für Ereignisse, die vom aktuellen <a href="../misc/Threads.htm">Skript-Thread</a> erzeugt werden, während #InputLevel den Level für jeden nachfolgenden Hotkey und Hotstring setzt. Damit ein via Skript erzeugtes Ereignis einen Hook-Hotkey oder -Hotstring auslösen kann, muss der Sendlevel des Ereignisses höher sein als der Inputlevel des Hotkeys oder Hotstrings.</p>
<p>Kompatibilität:</p>
<ul>
  <li><a href="Send.htm#SendPlayDetail">SendPlay</a> wird nicht von SendLevel beeinflusst.</li>
  <li><a href="Send.htm#SendInputDetail">SendInput</a> wird von SendLevel beeinflusst. Allerdings können die internen Hook-Hotkeys nicht vom Skript aktiviert werden, während ein SendInput aktiv ist, da es den Hook vorübergehend deaktiviert. Wenn Send oder SendInput jedoch <a href="Send.htm#SendInputUnavail">auf SendEvent zurückfällt</a>, ist es in der Lage, die Hotkeys des Skripts zu aktivieren.</li>
  <li><a href="../Hotkeys.htm">Hotkeys</a>, die die <a href="ListHotkeys.htm">reg</a>-Methode verwenden, können nicht zwischen physischen und künstlichen Eingaben unterscheiden und werden daher von SendLevel nicht beeinflusst. Hotkeys über Level 0 verwenden jedoch immer den Tastatur- oder Maus-Hook.</li>
  <li><a href="../Hotstrings.htm">Hotstrings</a> verwenden #InputLevel nur, um zu bestimmen, ob das zuletzt eingegebene Zeichen einen Hotstring auslösen soll. Zum Beispiel kann der Hotstring <code>::bzw::</code> unabhängig von #InputLevel ausgelöst werden, indem <code class="no-highlight">bzw</code> mit Level 1 oder höher gesendet und physisch ein <a href="../Hotstrings.htm#EndChars">Endungszeichen</a> eingegeben wird. Dies liegt an der Funktionsweise der Hotstring-Erkennung, die Eingaben aller Level außer Level 0 in einem einzigen globalen Pufferspeicher sammelt.</li>
  <li>Automatisch-ersetzende <a href="../Hotstrings.htm">Hotstrings</a> erzeugen immer Tastendrücke mit Level 0, da es in der Regel unerwünscht ist, dass der Ersatztext einen anderen Hotstring oder Hotkey auslöst. Um das zu umgehen, verwenden Sie einen nicht-automatisch-ersetzenden Hotstring und die SendEvent-Funktion.</li>
  <li>Zeichen, die mit der <a href="Send.htm#asc">ASC</a>-Methode (ALT+nnnnn) gesendet werden, können keinen Hotstring auslösen, selbst wenn SendLevel verwendet wird.</li>
  <li>Zeichen, die mit SendEvent im <a href="Send.htm#SendText">{Text}</a>-Modus, mit <a href="Send.htm#Unicode">{U+nnnn}</a> oder mit der <a href="Send.htm#characters">Unicode-Fallback-Methode</a> gesendet werden, können Hotstrings auslösen.</li>
</ul>
<p>Die interne Variable <strong>A_SendLevel</strong> enthält die aktuelle Einstellung.</p>
<p>Jeder neue Hotkey- oder Hotstring-<a href="../misc/Threads.htm">Thread</a> verwendet vorerst einen Sendlevel, der dem <a href="_InputLevel.htm">Inputlevel</a> des Hotkeys oder Hotstrings entspricht. Jeder andere neue Thread (z.B. ein Hotkey, ein <a href="Menu.htm">benutzerdefinierter Menüpunkt</a> oder eine <a href="SetTimer.htm">zeitgesteuerte</a> Subroutine) verwendet zunächst die Standardeinstellung der Funktion (üblicherweise 0). Diese Standardeinstellung kann während der <a href="../Scripts.htm#auto">Startphase des Skripts</a> geändert werden.</p>
<p>Die Verwendung von SendLevel während der <a href="../Scripts.htm#auto">Startphase des Skripts</a> beeinflusst auch die <a href="../misc/Remap.htm">Neubelegung von Tasten</a>.</p>
<p>AutoHotkey-Versionen älter als v1.1.06 verhalten sich so, als gelte standardmäßig <code>#InputLevel 0</code> und <code>SendLevel 0</code>.</p>

<h2 id="Related">Siehe auch</h2>
<p><a href="_InputLevel.htm">#InputLevel</a>, <a href="Send.htm">Send</a>, <a href="Click.htm">Click</a>, <a href="MouseClick.htm">MouseClick</a>, <a href="MouseClickDrag.htm">MouseClickDrag</a></p>

<h2 id="Examples">Beispiele</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> SendLevel ermöglicht das Auslösen von Hotkeys und Hotstrings eines anderen Skripts, was normalerweise nicht möglich wäre.</p>
<pre>
SendLevel 1
SendEvent "bzw{Space}" <em>; Erzeugt "beziehungsweise ".</em>

<em>; Folgendes kann in einem anderen Skript definiert werden:</em>
::bzw::beziehungsweise
</pre>
</div>

</body>
</html>
