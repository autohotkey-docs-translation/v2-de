<!DOCTYPE HTML>
<html lang="de">
<head>
<title>Any - Methoden &amp; Eigenschaften | AutoHotkey v2</title>
<meta name="description" content="Any repräsentiert die oberste Ebene der Typenhierarchie von AutoHotkey." />
<meta name="ahk:equiv-v1" content="index.htm" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga4.js" type="text/javascript"></script>
</head>
<body>

<h1>Any</h1>

<p><code>Any</code> ist die oberste Klasse in der Typenhierarchie von AutoHotkey. Alle anderen Typen sind Untertypen von Any.</p>
<p><code>Any.Prototype</code> definiert Methoden und Eigenschaften, die für alle Werte und Objekte (außer <a href="ComValue.htm">ComValue</a> und abgeleitete Typen) gelten, sofern nicht überschrieben. Das Prototypobjekt selbst ist nativ ein <a href="Object.htm">Object</a>, hat aber kein <code class="no-highlight">base</code> und identifiziert sich daher nicht als eine Instanz von Object.</p>

<h2 id="toc">Inhaltsverzeichnis</h2>
<ul class="indent">
  <li><a href="#Methods">Methoden</a>:
    <ul>
      <li><a href="#GetMethod">GetMethod</a>: Ruft die Implementierungsfunktion einer Methode ab.</li>
      <li><a href="#HasBase">HasBase</a>: Gibt True zurück, wenn das angegebene Basisobjekt in der Kette von Basisobjekten des Wertes ist.</li>
      <li><a href="#HasMethod">HasMethod</a>: Gibt True zurück, wenn der Wert eine Methode mit diesem Namen hat.</li>
      <li><a href="#HasProp">HasProp</a>: Gibt True zurück, wenn der Wert eine Eigenschaft mit diesem Namen hat.</li>
    </ul>
  </li>
  <li><a href="#Properties">Eigenschaften</a>:
    <ul>
      <li><a href="#Base">Base</a>: Ruft das Basisobjekt des Wertes ab.</li>
    </ul>
  </li>
  <li><a href="#Functions">Funktionen</a>:
    <ul>
      <li><a href="#GetBase">ObjGetBase</a>: Gibt das Basisobjekt des Wertes zurück.</li>
    </ul>
  </li>
</ul>

<h2 id="Methods">Methoden</h2>

<div class="methodShort" id="GetMethod"><h3>GetMethod</h3>
<p>Ruft die Implementierungsfunktion einer Methode ab.</p>
<pre class="Syntax">Wert.<span class="func">GetMethod</span>(<span class="optional">Name, ParamAnzahl</span>)</pre>
<p>Diese Methode ist äquivalent zu <code>GetMethod(Wert, Name, ParamAnzahl)</code>, sofern nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasBase"><h3>HasBase</h3>
<p>Gibt True zurück, wenn das angegebene <a href="../Objects.htm#delegation">Basisobjekt</a> in der Kette von Basisobjekten des Wertes ist, andernfalls False.</p>
<pre class="Syntax">Wert.<span class="func">HasBase</span>(BasisObj)</pre>
<p>Diese Methode ist äquivalent zu <code>HasBase(Wert, BasisObj)</code>, sofern nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasMethod"><h3>HasMethod</h3>
<p>Gibt True zurück, wenn der Wert eine Methode mit diesem Namen hat, andernfalls False.</p>
<pre class="Syntax">Wert.<span class="func">HasMethod</span>(<span class="optional">Name, ParamAnzahl</span>)</pre>
<p>Diese Methode ist äquivalent zu <code>HasMethod(Wert, Name, ParamAnzahl)</code>, sofern nicht überschrieben.</p>
</div>

<div class="methodShort" id="HasProp"><h3>HasProp</h3>
<p>Gibt True zurück, wenn der Wert eine Eigenschaft mit diesem Namen hat, andernfalls False.</p>
<pre class="Syntax">Wert.<span class="func">HasProp</span>(Name)</pre>
<p>Diese Methode ist äquivalent zu <code>HasProp(Wert, Name)</code>, sofern nicht überschrieben.</p>
</div>

<h2 id="Properties">Eigenschaften</h2>

<div class="methodShort" id="Base"><h3>Base</h3>
<p>Ruft das <a href="../Objects.htm#delegation">Basisobjekt</a> des Wertes ab.</p>
<pre class="Syntax">Basisobjekt := Wert.<span class="func">Base</span></pre>
<p>Bei <a href="../Objects.htm#primitive">primitiven Werten</a> ist der Rückgabewert das vordefinierte Prototypobjekt gemäß <code>Type(Wert)</code>.</p>
<p>Siehe auch: <a href="#GetBase">ObjGetBase</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>
</div>

<h2 id="Functions">Funktionen</h2>
<h3 id="GetBase">ObjGetBase</h3>
<p>Gibt das <a href="../Objects.htm#delegation">Basisobjekt</a> des Wertes zurück.</p>
<pre class="Syntax">BasisObj := <span class="func">ObjGetBase</span>(Wert)</pre>
<p>Es werden keine <a href="../Objects.htm#Meta_Functions">Metafunktionen</a> oder <a href="../Objects.htm#Custom_Classes_property">Eigenschaftsfunktionen</a> aufgerufen. Das Überschreiben der <a href="#Base">Base</a>-Eigenschaft hat keinen Einfluss auf das Verhalten dieser Funktion.</p>
<p>Wenn es keine Basis gibt, ist der Rückgabewert eine leere Zeichenkette. Nur der Any-Prototyp selbst hat keine Basis.</p>
<p>Siehe auch: <a href="#Base">Base</a>, <a href="Object.htm#SetBase">ObjSetBase</a>, <a href="Object.htm#Base">Obj.Base</a></p>

</body>
</html>
